is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# For nested tmux
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
# end nested tmux configuration

## Terminal
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
# set-option -sa terminal-overrides ",xterm-256color:Tc"
# set -g terminal-overrides ',xterm-256color:Tc'
#set -as terminal-overrides ',xterm*:sitm=\E[3m'

## Powerline
set-option -g status-interval 5

# Basic status bar colors
set -g status-fg colour240
set -g status-bg colour233

set-option -g status-position top

# Left side of status bar
set -ag status-left-style bg=colour214
set -ag status-left-style fg=colour243
set -g status-left-length 40
set -g status-left "#[fg=colour232,bg=colour214,bold] #S #[fg=colour240,bg=colour235] #I:#P #[fg=colour235,bg=colour233,nobold]"

# Right side of status bar
set -ag status-right-style bg=colour233
set -ag status-right-style fg=colour243
set -g status-right-length 150
set -g status-right "#[fg=colour255,bg=colour235] %H:%M %d-%b-%y #[fg=colour232,bg=colour245,bold] #(whoami)@#[fg=colour232,bg=colour245,bold]#H $wg_is_keys_off"

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "

# Current window status
set -ag window-status-style fg=colour214
set -ag window-status-style bg=colour232
set -ag window-status-current-style bg=colour214
set -ag window-status-current-style fg=colour232

# Window with activity status
set -g window-status-activity "bg=colour229" # fg and bg are flipped here due to
set -g window-status-activity "fg=colour233" # a bug in tmux

# Window separator
set -g window-status-separator ""
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on
set-option -g pane-active-border "bg=default"

# vim escpae key
set -sg escape-time 10

set -g display-panes-time 4000

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# change prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set-option -g allow-passthrough on  # enables escape code passthrough
set-option -g set-clipboard on      # enables tmux clipboard integration

# Copy
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

## Pane

# Split panes
unbind %    # split-window -h
unbind '"'  # split-window
unbind l
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind o last-window
#bind -n C-h run "($is_vim && tmux send-keys C-h) || \
#                 tmux select-pane -L"
#bind -n C-j run "($is_vim && tmux send-keys C-j) || \
#                 tmux select-pane -D"
#bind -n C-k run "($is_vim && tmux send-keys C-k) || \
#                 tmux select-pane -U"
#bind -n C-l run "($is_vim && tmux send-keys C-l) || \
#                 tmux select-pane -R"

bind b send-keys -t .+ "cabal build" ENTER
bind u run "/home/shulhi/.dotfiles/toggle.sh > /dev/null"

## Mouse
set -g mouse on

## History
set-option -g history-limit 10000

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
